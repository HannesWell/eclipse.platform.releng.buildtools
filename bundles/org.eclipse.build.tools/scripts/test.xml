<project name="Targets to run Automated Tests Locally and Remotely" default="main" basedir=".">

<property name="customTest" value="${tester}/customTest.xml" />
<property name="testing.properties" value="${tester}/testing.properties" />
<property file="${testing.properties}" />

<target name="main">
	<antcall target="${testTarget}" />
</target>

<target name="runtests-remote">
	<!--in cases where a remote user needs to be specified-->
	<condition property="rshuser" value="-l ${user}" >
		<isset property="user" />
	</condition>
	<condition property="rcpuser" value=".${user}" >
		<isset property="user" />
	</condition>


	<!--
	testDir:  the absolute path to the directory where the testing will occur
	-->
	<exec dir="." executable="rsh">
		<arg line="${testMachine} ${rshuser} mkdir ${testDir}" />
	</exec>

	<!--install the vm used for testing-->
	<antcall target="installVmForRemote" />	

	<!--copy the built automated testing framework-->
	<exec dir="." executable="rcp">
		<arg line="${buildDirectory}/${buildLabel}/${testFramework} ${testMachine}${rcpuser}:${testDir}" />
	</exec>
	
	<!--set up the automated testing framework-->
	<exec dir="." executable="rsh">
		<arg line="${testMachine} ${rshuser} unzip -o -qq ${testDir}/${testFramework} -d ${testDir}" />
	</exec>
	
	<!--copy the built runtime to be tested-->
	<exec dir="." executable="rcp">
		<arg line="${buildDirectory}/${buildLabel}/${runtime} ${testMachine}${rcpuser}:${executionDir}" />
	</exec>

	<!--callback to custom script for additional setup-->
	<ant antfile="${customTest}" target="customSetup" dir="${basedir}" />

	<!--execute the tests-->
	<exec dir="." executable="rsh">
		<arg line="${testMachine} ${testScript} ${args}" />
	</exec>
	
	<!--  this directory must exist before rcp operation  -->
	<mkdir dir="${buildDirectory}/${buildLabel}/testresults" />
	<mkdir dir="${buildDirectory}/${buildLabel}/testresults/consolelogs" />

	<!--copy results of testing back to build machine-->	
	<exec dir="." executable="rcp">
		<arg line="-r ${testMachine}${rcpuser}:${executionDir}/results/html ${buildDirectory}/${buildLabel}/testresults"/>
	</exec>
	<exec dir="." executable="rcp">
		<arg line="-r ${testMachine}${rcpuser}:${executionDir}/results/xml ${buildDirectory}/${buildLabel}/testresults"/>
	</exec>

	<!--  copy the console log from testing  -->
	<exec dir="." executable="rcp">
		<arg line="-r ${testMachine}${rcpuser}:${executionDir}/${consolelog} ${buildDirectory}/${buildLabel}/testresults/consolelogs"/>
	</exec>
	
</target>


<target name="runtests-local">
	<delete dir="${testDir}" />
	<mkdir dir="${testDir}" />

	<!--set up testing directory-->
	<unzip src="${buildDirectory}/${buildLabel}/${testFramework}" dest="${testDir}" />
	
	<!--install the vm used for testing-->
	<antcall target="installVmForLocal" />
	
	<!--copy in the runtime to test-->
	<copy todir="${executionDir}" file="${buildDirectory}/${buildLabel}/${runtime}" />

	<!--callback to custom script for additional setup-->
	<ant antfile="${customTest}" target="customSetup" dir="${basedir}" />

	<!--run the tests-->
	<exec dir="${executionDir}" executable="${testExecutable}">
  		<arg line="${args}" />
	</exec>

	<mkdir dir="${buildDirectory}/${buildLabel}/testresults" />
	<mkdir dir="${buildDirectory}/${buildLabel}/testresults/consolelogs" />

	<copy todir="${buildDirectory}/${buildLabel}/testresults">
		<fileset dir="${executionDir}/results" />
	</copy>

	<copy todir="${buildDirectory}/${buildLabel}/testresults/consolelogs" file="${executionDir}/${consolelog}" />
</target>

<target name="installVmForRemote" unless="skipVmInstall">
	<!--get and install the vm to test with-->
	<get src="${vmUrl}" dest="${vmDest}" usetimestamp="true"/>
	<exec dir="." executable="rcp">
		<arg line="${vmDest} ${testMachine}:${testDir}" />
	</exec>
	<exec dir="." executable="rsh">
		<arg line="${testMachine} ${vmInstallCommand}" />
	</exec>
</target>

<target name="installVmForLocal" unless="skipVmInstall">
	<get src="${vmUrl}" dest="${vmDest}" usetimestamp="true"/>
	<exec dir="${testDir}" executable="${vmInstallExecutable}">	
		<arg line="${vmInstallCommand}" />
	</exec>
</target>


</project>