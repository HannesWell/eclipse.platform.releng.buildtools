###############################################################################
# Copyright (c) 2005, 2006 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
# properties for: RSSFeedCreateFeedTask.java, RSSFeedAddEntryTask.java, RSSFeedGetPropertyTask.java, RSSFeedUpdateEntryTask.java, RSSFeedPublisherTask.java

# one of 0|1|2
debug=1

# if file does not exist, it will be created; if it does, it will be modified
file=../data/builds-uml2.xml

# required
project=UML2
branch=2.0.0
buildID=S200607082345
feedURL=http://www.eclipse.org/uml2/feeds/builds.xml
buildURL=http://download.eclipse.org/tools/uml2/scripts/downloads-viewer.php?s=%%branch%%/%%buildID%%

# optional build alias, like 2.2.0RC4
buildAlias=2.2.0RC3

#optional build type; one of: N, I, M, S, R or MC, SC, RC (Maintenance, Stable, Release for Callisto)
buildType=SC

# optional
releaseNotesURL=http://www.eclipse.org/uml2/news/release-notes.php?version=%%branch%%
updateManagerURL=http://download.eclipse.org/tools/uml2/updates/
downloadsURL=http://download.eclipse.org/tools/uml2/scripts/downloads.php

# one of NONE|UNSIGNED|SIGNREADY|BUILDREADY|SIGNED 
jarSigningStatus=

# one of NONE|BUILDCOMPLETE|UMSITEREADY|CALLISTOSITEREADY|COMPLETE, or 
# timestamp when will be ready (eg., 2006-05-02T20:50:00Z), or 
# project on which you're waiting (eg., TPTP)
callistoStatus=

# comma or space separated values
dependencyURLs=http://download.eclipse.org/downloads/drops/S-3.2M2-200509231000/eclipse-SDK-3.2M6-linux-gtk.tar.gz http://download.eclipse.org/tools/emf/downloads/drops/2.2.0/S200607081234/emf-sdo-xsd-SDK-2.2.0M6.tar.gz

#optional
JUnitTestURL=http://download.eclipse.org/tools/uml2/downloads/drops/%%branch%%/%%buildID%%/testResults.php
performanceTestURL=
APITestURL=

# values to set for test results in quads of os,ws,arch,status,os,ws,arch,status,... 
JUnitTestResults=ALL,ALL,ALL,PASS
performanceTestResults=
APITestResults=

# values to set for release bundles in quints of os,ws,arch,name/type,filename,os,ws,arch,name/type,filename... 
# only need the filename; the full http URL can be assembled from buildURL + "/download.php?dropFile=" + filename or buildURL (switched to ftp://) + "/" + filename
# eg., ALL,ALL,ALL,SDK,uml2-SDK-%%buildAlias%%.zip
Releases=ALL,ALL,ALL,SDK,uml2-SDK-%%buildAlias%%.zip

########################################

# options for publishing files - need either an scp target or a cvs root/path, or both

# /path/to/cvs/executable
cvsExec=/usr/bin/cvs
# user@cvsServer:/path/to/cvs/root
cvsRoot=khussey@dev.eclipse.org:/cvsroot/org.eclipse
# cvs/module/path
cvsPath=www/uml2/news
# /tmp/folder/path/for/checkout
cvsTemp=/tmp/RSSFeedPublisherTask-uml2-khussey

# /path/to/scp/executable
scpExec=/usr/bin/scp
# user@server:/path/to/destination/folder/ - destination folder MUST ALREADY EXIST
scpTarget=khussey@download1.eclipse.org:/home/data/httpd/download.eclipse.org/tools/uml2/feeds/

# optionally, if the target folder might not exist, you can use ssh to create it before scp'ing the file - only runs if sshMakeDirCommand is defined
sshExec=/usr/bin/ssh
